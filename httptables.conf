
  # Lua Settings
  lua_package_path '$prefix/conf/httptables/lua/?.lua;;';
  lua_code_cache on;
  lua_shared_dict data 5m;
  lua_socket_log_errors off;

  init_by_lua_block {
    httptables = require "httptables"
    httptables.init()
  }

  init_worker_by_lua_block {
    httptables.init_worker()
  }

  # HttpTables Core
  access_by_lua_file conf/httptables/lua/core.lua;

  server {
    listen 0.0.0.0:10983;

    client_max_body_size 10m;
    client_body_buffer_size 10m;

    access_by_lua_block {
        apis = require "apis"
        apis.cors()
    }

    # Should be deleted When deploying a production system
    location / {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.default()
        }
    }

    location = /admin/role_types {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.role_types()
        }
    }

    location = /admin/roles {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.roles()
        }
    }

    location = /admin/sorted_role_types {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.sorted_role_types()
        }
    }

    location = /admin/notify {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.notify()
        }
    }

    location = /admin/status {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.status()
        }
    }

    location = /admin/lamda {
        default_type application/json;
        content_by_lua_block {
            apis = require "apis"
            apis.lamda()
        }
    }

    location = /robots.txt {
      return 200 'User-agent: *\nDisallow: /';
    }
  }
