worker_processes auto;
error_log logs/error.log info;
daemon on;

worker_rlimit_nofile 1024;

events {
  worker_connections 1024;
  multi_accept on;
}

http {
  charset UTF-8;

  access_log logs/access.log;
  access_log off;

  # Timeouts
  keepalive_timeout 60s;
  client_header_timeout 60s;
  client_body_timeout 60s;
  send_timeout 60s;

  # Proxy Settings
  proxy_buffer_size 128k;
  proxy_buffers 4 256k;
  proxy_busy_buffers_size 256k;
  proxy_ssl_server_name on;

  # IP Address
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;
  real_ip_recursive on;

  # Other Settings
  client_max_body_size 0;
  underscores_in_headers on;
  reset_timedout_connection on;
  tcp_nopush on;

  # Lua Settings
  lua_package_path 'conf/httptables/lua/?.lua;;';
  lua_shared_dict data 5m;
  lua_socket_log_errors off;

  init_by_lua_block {
    httptables = require "httptables"
    httptables.init()
  }

  init_worker_by_lua_block {
    httptables.init_worker()
  }

  server {
    server_name _;
    listen 0.0.0.0:8000;

    location / {
      default_type 'text/plain';

      # HttpTables Core
      access_by_lua_file conf/httptables/lua/core.lua;

      content_by_lua_block {
        ngx.say("hello, httptables");
      }
    }
  }

  server {
    listen 0.0.0.0:8001;

    client_max_body_size 10m;
    client_body_buffer_size 10m;

    location / {
        default_type application/json;
        content_by_lua_file conf/httptables/lua/api.lua;
    }

    location /robots.txt {
      return 200 'User-agent: *\nDisallow: /';
    }
  }
}
