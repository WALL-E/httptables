{
  "name": "mock-request",
  "description": "A simple testing tool for mocking HTTP sequences of request / response pairs in node.js",
  "version": "0.1.2",
  "author": {
    "name": "Nodejitsu Inc.",
    "email": "info@nodejitsu.com"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie@nodejitsu.com"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/nodejitsu/mock-request.git"
  },
  "devDependencies": {
    "it-is": "0.x.x",
    "vows": "0.5.x"
  },
  "keywords": [
    "mock",
    "mocking",
    "tools",
    "testing"
  ],
  "main": "./lib/index.js",
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# mock-request\n\nA simple testing tool for mocking HTTP sequences of request / response pairs in node.js\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing mock-request\n``` bash\n  $ [sudo] npm install mock-request\n```\n\n## Purpose\nThe `mock-request` library is designed to easily mock HTTP endpoints in tests which fit the following boilerplate: \n\n1. Tests are performed by making HTTP requests against an API server\n2. Assertions are made against the HTTP response (status, headers, body, etc)\n3. Rinse. Repeat.\n\nThe method signature used by the `mock-request` library matches that of the popular [request][0] library widely used in the node.js community. Besides that method signature, there are no external test framework dependencies so use whatever your preference is: [vows][1], [expresso][2], [nodeunit][3], etc.\n\nIf you're curious why mocking your HTTP requests could be helpful you can [read up here][4].\n\n## Usage\nThe `mock-request` library is designed for explicit mocking, it does not perform any interpolation or guessing beyond assuming a default response of `200` unless otherwise indicated. Here's a sample of how to use `mock-request`:\n\n``` js\n  var mockRequest = require('mock-request'),\n      assert = require('assert');\n      \n  var mockFn = mockRequest.mock()\n                .get('/not-here')\n                .respond(404)\n                .post('/tests', { 'some': 'test-youre-running' }, {\n                  'x-test-header': true\n                })\n                .respond(200, { 'some': 'test-has-completed' }, {\n                  'x-test-completed': true\n                })\n                .run();\n  \n  //\n  // The mock function returned from `mockRequest.mock()` is \n  // synchronous because no HTTP actually takes place.\n  //\n  mockFn({\n    method: 'GET',\n    uri: 'http://mock-request/not-here'\n  }, function (err, res, body) {\n    assert.equal(res.statusCode, 404);\n  });\n  \n  //\n  // Now that we've made the first `GET` request, we have to make the \n  // `POST` request or `mock-request` will throw an `Error`\n  //\n  mockFn({\n    method: 'POST',\n    uri: 'http://mock-request/tests',\n    headers: {\n      'some': 'test-youre-running'\n    }\n  }, function (err, res, body) {\n    assert.deepEqual(body, { 'some': 'test-has-completed' });\n    assert.deepEqual(res.headers, { 'x-test-completed': true });\n    \n    //\n    // We mocked this request to respond with 404, so by asserting\n    // 200, this will throw an `AssertionError`.\n    //\n    assert.equal(res.statusCode, 200);\n  });\n```\n\n## Roadmap\n\n1. [Get feedback][5] on what else could be exposed through this library.\n2. Improve it.\n3. Repeat (1) + (2).\n\n## Run Tests\n<pre>\n  npm test\n</pre>\n\n#### Author: [Charlie Robbins](http://blog.nodejitsu.com)\n#### Contributors: [Dominic Tarr](http://github.com/dominictarr)\n\n[0]: http://nodejs.org\n[1]: http://vowsjs.org\n[2]: http://tjholowaychuk.com/post/656851606/expresso-tdd-framework-for-nodejs\n[3]: http://github.com/caolan/nodeunit\n[4]: http://en.wikipedia.org/wiki/Mock_object\n[5]: https://github.com/nodejitsu/mock-request/issues",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nodejitsu/mock-request/issues"
  },
  "_id": "mock-request@0.1.2",
  "dist": {
    "shasum": "be21b50488ad4447003840d25a8a5cd595e4102e"
  },
  "_from": "mock-request@>= 0.1.2",
  "_resolved": "https://registry.npmjs.org/mock-request/-/mock-request-0.1.2.tgz"
}
